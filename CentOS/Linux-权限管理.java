---------------------------
Linux-权限管理系统			|
----------------------------
	# 之前讲的只是基本的权限,

---------------------------
Linux-ACL权限				|
----------------------------
	# 简介
		* 以前所学的权限控制:所有者,所属组,其他  在对付一些比较复杂的情况,那么就会显得有点吃力
		* ACL权限,就是为了解决这个问题而来的(跟windows就一个德行了)
		* 说白了:直接找到用户,给予某个文件/夹的权限..不用考虑用户组,所有者等等身份问题
		* '而且,这种权限是跟磁盘分区有关系的'

	# 查看分区ACL权限是否开启
		dumpe2fs -h /dev/sda3
		# dumpe2fs命令就是查询指定分区系统的系信息的命令
		# 选项
			-h:			//仅显示超级块中的信息,而不显示磁盘块组的详细信息
		# 其实默认都是开启的,只是这里给你看下而已
	
	# 临时开启分区ACL权限
		# ..自己去查吧
	
	# 永久开启分区ACL权限
		/etc/fstab
		* 去修改这个文件就好了,系统开机会自动的挂载它
	
	# 查看文件的ACL权限 
		getfacle 文件名
		
	# 设置ACL权限
		setfacl [选项] [文件名]
		# 选项 
			-m:				//设定ACL权限
			-x:				//删除指定的ACL权限
			-b:				//删除所有的ACL权限
			-d:				//设定默认的ACL权限
			-k:				//删除默认的ACL权限
			-R:				//递归设定ACL权限

	# 给指定用户进行ACL授权
		setfacl -m u[用户名]:[权限] [文件/目录]
		# 权限在这里是rwx,很显然一次性可以设置N个
		# 如果是文件要执行递归赋权,那么-R必须要在:setfacl后面
		# demo
			setfacl -m u:Kevin:rx /demo

	# 给指定用户组进行ACL授权
		setfacl -m g[用户组名]:[权限] [文件/目录]
		# 同上....

	# 关于最大有效权限
		* 执行了getfacle [文件]后,会查询到指定文件的ACL权限信息
		* 里面有个mask指标
		* 其实啊,再对一个文件进行ACL授权的时候,是需要和这个mask的权限相与才能能到用户真正的权限
		* 也就是说,mask里面有的,才能给用户
		* 修改最大权限
			setfacl -m m:[权限]

	# 删除指定用户的ALC权限
		setfacl -x u:[用户名] [文件名]
	
	# 删除指定用户组的ACL权限
		setfacl -x g:[组名] [文件名]
	
	# 删除指定文件的所有ACL权限
		setfacl -b [文件名]
	
	# 递归设置 
		* 很显然就是针对于目录的
		setfacl -m u:[用户名]:[权限 ] -R [目录名]
	
	# 设置默认ACL权限 
		* 给父级目录设置了ACL权限,那么目录中所有'新建的子文件',都会继承父目录的ACL权限
		* 得这么理解,我给一个文件夹(递归)弄了ACL权限,然后在里面新建了N多文件.这些新文件是没有ACL权限的,因为是新建嘛
		* 所以可以通过如下命令来设置,那么新建的文件,对于指定的用户也是有指定的权限的
		setfacl -m d:u:[用户名]:[权限] [文件名]

---------------------------
Linux-文件特殊权限			|
----------------------------
	# SetUID
		* 只有二进制程序才有这个东西
		* 命令执行者必须要有(x)执行权限
		* 这权限,只在程序执行过程中有效,也就是说身份的改变,只是在程序执行过程中有效
		* 通俗理解就是:我普通的用户去执行root的文件,那么这个用户会临时获得这个文件所有者的身份
		* passwd命令(这个命令文件就是这个德行,所以任何人都可以执行它来修改自己的密码)
			-rwsr-xr-x. 1 root root 30768 Feb 22  2012 /usr/bin/passwd
			# 里面的这个's',文件的所有者范围内有这个权限
		* 通俗理解:程序A要用到B配置文件,但是用户没有对B配置文件的权利,那么如果A程序有S权限,谁启动了A程序.谁就暂时的获取了这个A程序的所有者所有的权限,..就可以操作B配置文件了
		* 设置SUID
			chmod 4755 [文件名]
			chmod u+s [文件名]
		* 取消SUID
			chmod 755 [文件名]
			chmod u-s [文件名]
		* 其实非常的危险,一般不建议去搞这个

	# SetGID
		* 针对于组
	# Sticky BIT
		* 针对于其他人

	# 不看了,MD太长...自己去找
---------------------------
Linux-文件系统属性chattr权限|
----------------------------
	# 加锁的感觉

	chattr [-+=] [选项] 文件或者目录
	# 这东西特叼,对root都生效
	# -:删除
	# +:添加  
	# =:直接就是干.
	# 选项
		-a:				//针对文件和目录是不同的
			> 给文件:只能在文件中添加数据,不能删除数据,也不能修改
			> 给目录:只能在目录中建立,修改文件,不允许删除
		-i:				//针对文件和目录是不同的
			> 给文件:那么不允许对这个文件删除,改名...也不能添加和删除任何数据
			> 给目录:只能修改目录下的文件数据,不允许新建和删除文件

	# chattr +i [文件]			//这个文件不能改,不能删,哪怕是root爸爸也不行
	

	# 查看文件系统属性
	lsattr [选项] [文件名]
		# 选项
		-a:			//显示所有文件和目录
		-d:			//如果目标是目录,仅仅列出目录本身的属性,而不子文件


---------------------------
Linux-系统命令sudo权限		|
----------------------------
	# sudo,就是普通用户,来执行root的权限 
	# 它的操作的对象是系统命令
	# 配置文件
		/etc/sudoers
		root ALL=(ALL) ALL
		用户 被管理主机的地址=(可使用的身份) 授权命令(绝对路径)
		%whell ALL=(ALL) ALL
		%组名 被管理的主机地址=(可使用的身份) 授权命令(绝对路径)
	

	
