--------------------
List				|
--------------------
	# 是一种有序集合
	# 跟JAVA数组一个德行
	# 可以任意的添加/删除元素
	# 元素类型也可以不同,也可以是多个List嵌套
	# 定义
		users = ["KevinBlandy","Litch","Rocco"];
		users = list(['1',2,3]);
			* 可以把数组,或者元组转换为List

	# 下标从0开始,注意越界的情况

	# 如果下标为负数,则表示逆向取值
		-1		//倒数第一个元素
		-2		//倒数第二个元素
		-3		//倒数第三个元素

	# 通过给指定下标的元素赋值,可以直接替换掉元素

	# 使用del删除元素
		del list[2:4]
		* 剩余元素向前靠拢

	# 另一种风格的检索/替换/删除
		users = ["KevinBlandy","Litch","Rocco"];

		users[0:2] = ["A","C"]
			* 把0-1角标的值替换为 "A","C"
			* 第一个参数表示从哪里开始
			* 第二个参数表示到哪个角标结束(不包含当前角标)
			* 如果第一个参数比二个参数小,会直接清空数组
		

		users[0:2] = []
			* 清空0-1角标的数据

		users[:] = []
			* 直接清空
		
		list[x:y] = [z]
		* 把第x-y(不包含y)角标之间的数据替换为z
		* x默认是0
		* y默认len()(集合长度)
		* 会自动的删除空元素
		* 如果 y <= x && y >= 0则y会被忽略,直接在x后面插入z,如果原list还有元素,则后移
			users = list(["1","2","3","4","5","6"])
			users[3:0] = [1,3,6,9]
			['1', '2', '3', 1, 3, 6, 9, '4', '5', '6']

	# 组合List,使用 + / += 操作符
		* 右边必须是可以迭代的数据类型,不然抛出异常
		arr1 = [1,2,3]
		arr2 = [4,5,6]
		arr3 = arr1 + arr2;
		print (arr3)

		aarr3 += ["666"]
		print(arr3)

		* 对于和字符串相加的神奇结果(字符串的每个元素,都会被当作一个数组成员)
		list = [1,2,3]
		list += "kevin"
		print(list)     //[1, 2, 3, 'k', 'e', 'v', 'i', 'n']
	
	# 复制List,使用 * 操作符
		users = ["k","e","v"];
		print(users * 4)        //   ['k', 'e', 'v', 'k', 'e', 'v', 'k', 'e', 'v', 'k', 'e', 'v']
	
	# 列表内涵
		* 是一种列表生成式
		* 写列表生成式时，把要生成的元素x * x放到前面，后面跟for循环，就可以把list创建出来
		* 后面可以跟上一个 boolean 表达式,表示过滤
		[x * x for x in range(1, 11)]
		[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]

		[x * x for x in range(1, 11) if x % 2 == 0]
		[4, 16, 36, 64, 100]

		[x for x in range(1,10) if x %2 == 0]
		[2, 4, 6, 8]

--------------------
List-方法			|
--------------------
	'插入相关'
		append(item);
			# 往末尾插入新的元素
		
		insert(num,item);
			# 往指定的下标插入新的元素
			# 如果超出了数组的长度 + 1,则永远都是在最后
			# 如果当前位置或者后面有元素,则往后移
			# 如果是负数,会先根据逆序的规则,转换为正序的下标值,再进行插入操作


	'删除相关'

		clear();
			# 清空列表所有元素

		pop();
			# 删除末尾的元素,并且返回
			# 如果指定了参数,则删除指定下标的元素
			# 其他元素向前靠拢
		
		remove(item)
			# 删除指定的内容,从左往右第一次出现的第一个,并非是下标
			# 其他元素向前靠拢
	
		del 
			# 使用del关键字删除指定的元素
			# 其他元素向前靠拢
			# demo
				del arr[0]

	'检索相关'	
		
		index(value);
			# 返回指定value第一次出现的下标,数据不存在,抛出异常
		
		count(value);
			# 返回指定value在集合中出现的次数,如果不存在,返回0

	'其他'
		copy();
			# 对数据进行浅拷贝
			# 把集合中的所有数据,都拷贝出来一份,存入新的集合,注意.拷贝的是集合中的元素的地址
			# 相当于
				arr[:]
		
		reverse();
			# 反转List中的元素
		
		sort();
			# 对数据进行排序
			# 命名参数
				reverse
					* 如果该值为 True,则反转排序结果
				key
					* 当数据类型是'对象'的时候,可以根据指定的'属性'来进行排序

		extend(target);
			# 把target的所有元素都拼接到 this 集合的末尾
			# 相当于
				arr1 = [1,2,3];
				arr2 = [4,5,6];
				#arr1[len(arr1) : ] =  arr2
				arr1.extend(arr2)
				print(arr1)
			
--------------------
List-静态方法		|
--------------------
	list.append(arr,param)
		# 往一个arr数组里添加新的数据 param



