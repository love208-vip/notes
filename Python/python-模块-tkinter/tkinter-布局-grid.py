----------------------------
grid 布局					|
----------------------------
	* 由于我们的程序大多数都是矩形,因此特别适合于网格布局,也就是 grid 布局
	* 使用 grid 布局的时候,我们使用 grid 函数,在里面指定两个参数,用 row 表示行,用 column 表示列
	* 其中值得注意的是 row 和 column 的编号都从 0 开始
	* grid 函数还有个 sticky 参数,它可以用 N, E, S, W 表示(上右下左),它决定了这个组件是从哪个方向开始的
	* grid 布局直接用后面的行和列的数字来指定了它位于哪个位置,而不必使用其他参数
	* grid 函数也支持诸如 ipadx,ipady, padx, pady,它们的意思和 pack 函数是一样的默认边距是 0
	* 它还支持参数比如 rowspan,表示跨越的行数
	* columnspan 表示跨越的列数。
	
	* grid() 关键字参数
		row
			* 开始的行号,从0开始
		column
			* 开始的列号,从0开始
		rowspan
			* 跨越的行数
		columnspan
			* 跨越的列数
		sticky
			* 指定组件的对齐方式
			* N, E, S, W 表示(上右下左)
			* 支持组合使用
				sticky=N/S/E/W	顶端对齐/底端对齐/右对齐/左对齐
			　　sticky=N+S		拉伸高度,使其在水平方向上顶端和底端都对齐
			　　sticky=E+W		拉伸宽度,使其在垂直方向上左边界和右边界都对齐
			　　sticky=N+S+E	拉伸高度,使其在水平方向上对齐,并将控件放在右边(当两个控件放在同一行同一列时效果明显)
				sticky=CENTER	表示中间
			 　	.......
　　			* 还有诸如此类的组合方式根据需要调整
		ipadx,ipady, padx, pady
			* 分别指定x和y放心的内间距,和外间距
		

		