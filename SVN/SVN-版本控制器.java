SVN是个什么鬼
	1,代码备份
		* 写了N多代码,保存硬盘也不靠谱.硬盘烧了.一切都没了!
	2,代码还原
		* 跟数据库一样,可以rollback....当然你要记得开启事务
	3,协同开发
		* 简直就是日了狗了,很多人一起整.就会出很多事情.
	4,多版本项目文件管理
	5,这锅我不背
		* 谁动了代码,都能看出来.这锅我不背
	6,权限控制
		* 有些代码对于有些队友,只能看不能摸



版本控制简介
	Revision control,这是一种思想
	SVN,就是实现了这个思想. SubVersion
	* 它是Apache的一个项目(这组织牛逼啊),


SVN安装
	1,可劲儿点下一步
	2,安装目录,尽量不能带中文和空格.不然出现问题你都找不到
	3,安装版会自动的创建环境变量.
	4,CMD,输入:svn --version
		* 有输出版本信息,那么服务器端就安装成功了

创建版本库
	1,新建个目录,随便起名儿!有意义更好
	2,一个SVN服务器就能对付整个公司所有的项目
		* 可以以不同的目录来区分
	3,CMD命令
		* svnadmin create D:\目录
		* 创建之后的目录结构
		conf				//当前版本库的配置文件
		db					//db,数据库(SVN保存数据,底层也是使用数据库保存)
		hooks				//有点像数据库的触发器.涉及到一些底层C的东西.先不管
		locks				//跟文件的锁定有关
		format				//用不上
		README.txt

启动服务器
	1,CMD命令
		* svnserve -d -r D:\地址
			-d:表示后台启动
			-r:表示版本库根目录
		* 例:svnserve -d -r D:\OA
	2,SVN服务监听'3690'端口.使用cmd命名:nestat -an查看端口是否被占用来确定是否启动成功
		* 这东西启动跟Tomcat一个德行,都像假死.窗口一直在,光标一直闪
		* 强行关闭窗口,那么服务关闭.
	3,另外一种开启服务方法
		* 把SVN注册为一个window服务,就不用需要一直开着CMD窗口了
		* 使用winds的cmd命令.主要,这个命令并不来自于SVN
			sc create 服务名 binpath= "运行服务所需要的二进制文件路径以及运行该二进制文件的命令行参数" start= auto depend= Tcpip
				* start 是否自动启动
				* depend 是否依赖Tcpip协议
				* 注意,binpath后面有个空格.路径要写在双引号里面.这是规定
		* 让它随着windos的启动而启动
		例:
		sc create svnofkevin binpath= "C:\Program Files\VisualSVN Server\bin\svnserve.exe --service -r D:\OA" start= auto depend= Tcpip
			* 注意:binpath指定的的文件后带有参数.指定目录也是有讲究的.如果目录下有很多的仓库.那么就不要单独指定.指定父级目录
			* 提示创建成功,不一定是成功了.去服务里面成功试试.能不能成功的启动和关闭
		
客户端操作
	['检出']
	* 有Eclipse插件客户端,有独立的客户端
	1,svn checkout svn://localhost/项目
		* localhost就是ip地址,不解释.
		* 如果设置这个服务的时候,是设置的多个仓库.那么项目必填
		* 如果设置这个服务的时候,是设置单个仓库,那么项目不用填.就一个项目当然导它
	2,文件导出后,会在目标文件夹建一个:.svn的隐藏文件夹,很重要不能删
		* 这东西一但被删除,那么就不能跟SVN服务器交互了.千万别动它
	['提交']
	1,进入到要提交的文件/夹所在的目录
		* svn add 名称.后缀								//纳入文件
		* 在仓库目录下的conf目录下的svnserve.conf文件中大约第19行位置的anon-access = write,修改值为write,去掉注释.头部别留空格
		* svn commit -m "修改信息" 名称.后缀			//上传文件,必须带上修改信息.其实就是记录日志
	['更新']
	